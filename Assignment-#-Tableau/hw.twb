<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='merge' inline='true' name='federated.1ch2zrq071foab1b9goew0r8trni' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='merge' name='textscan.0u39bad1lh1jjc1cifvhu1ejzl8i'>
            <connection class='textscan' directory='F:/rawr/Documents/Assignment-#-Tableau' filename='merge.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0u39bad1lh1jjc1cifvhu1ejzl8i' name='merge.csv' table='[merge#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[merge.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Distance between start and end' datatype='real' name='[Calculation_751819676872953856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((([end station latitude]-[start station latitude])*69)^2+(([end station longitude]-[start station longitude])*cos([start station latitude]))^2)^(1/2)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Unknown' />
          <alias key='1' value='Male' />
          <alias key='2' value='Female' />
        </aliases>
      </column>
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end station latitude:qk]' />
          <groupfilter function='level-members' level='[none:end station longitude:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude,QUARTER(Starttime),YEAR(Starttime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end station latitude:qk]' />
          <groupfilter function='level-members' level='[none:end station longitude:qk]' />
          <groupfilter function='level-members' level='[qr:starttime:ok]' />
          <groupfilter function='level-members' level='[yr:starttime:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Gender,MONTH(Starttime),QUARTER(Starttime),YEAR(Starttime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:gender:ok]' />
          <groupfilter function='level-members' level='[mn:starttime:ok]' />
          <groupfilter function='level-members' level='[qr:starttime:ok]' />
          <groupfilter function='level-members' level='[yr:starttime:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (MONTH(Starttime),QUARTER(Starttime),YEAR(Starttime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:starttime:ok]' />
          <groupfilter function='level-members' level='[qr:starttime:ok]' />
          <groupfilter function='level-members' level='[yr:starttime:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station latitude:qk]' />
          <groupfilter function='level-members' level='[none:start station longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.444444' measure-ordering='alphabetic' measure-percentage='0.555556' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='%Split of Usertype by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Unknown' />
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (Gender,MONTH(Starttime),QUARTER(Starttime),YEAR(Starttime))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:gender:ok]' />
                <groupfilter function='level-members' level='[mn:starttime:ok]' />
                <groupfilter function='level-members' level='[qr:starttime:ok]' />
                <groupfilter function='level-members' level='[yr:starttime:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:gender:ok]' member='0' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[yr:starttime:ok]' member='2018' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[qr:starttime:ok]' member='3' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='9' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[qr:starttime:ok]' member='4' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[mn:starttime:ok]' member='10' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='11' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[yr:starttime:ok]' member='2019' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[qr:starttime:ok]' member='1' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='3' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[qr:starttime:ok]' member='2' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[mn:starttime:ok]' member='4' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='5' />
                            <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:gender:ok]' />
                  <hierarchy name='[mn:starttime:ok]' />
                  <hierarchy name='[qr:starttime:ok]' />
                  <hierarchy name='[yr:starttime:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:usertype:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:usertype:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:usertype:nk]' member='%null%' />
                <groupfilter function='member' level='[none:usertype:nk]' member='&quot;usertype&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[none:usertype:nk]</column>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (Gender,MONTH(Starttime),QUARTER(Starttime),YEAR(Starttime))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='1' field='[federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5]' scope='rows' value='% of Total Rides by Gender' />
            <format attr='title' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5]' scope='rows' value='% of Total Rides by Subscriber vs Customer' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:usertype:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5] + [federated.1ch2zrq071foab1b9goew0r8trni].[pcto:sum:Number of Records:qk:5])</rows>
        <cols>([federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok] / [federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok])</cols>
        <percentages enabled='true' mode='column-in-pane' />
      </table>
      <simple-id uuid='{276B5A14-D6A9-4130-BDBC-670F4907CE1C}' />
    </worksheet>
    <worksheet name='Direct distance between start and end stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column caption='Distance between start and end' datatype='real' name='[Calculation_751819676872953856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((([end station latitude]-[start station latitude])*69)^2+(([end station longitude]-[start station longitude])*cos([start station latitude]))^2)^(1/2)' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_751819676872953856]' derivation='None' name='[none:Calculation_751819676872953856:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_751819676872953856]' derivation='None' name='[none:Calculation_751819676872953856:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_751819676872953856:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_751819676872953856:ok]' member='0.0' />
                <groupfilter function='member' level='[none:Calculation_751819676872953856:ok]' member='334.19875201409695' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:qk]' scope='cols' value='Distance between start and end, as the crow flies (miles)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</rows>
        <cols>[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Spikes are likely common pairs of start and end stations</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='4.2208741262015756'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4906.4692482915725'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='5.3974119288336668'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:Calculation_751819676872953856:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3158.1913439635537'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{434DB12B-005C-41CD-8FBF-0DC4CFFD498D}' />
    </worksheet>
    <worksheet name='Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Unknown' />
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:gender:ok]' />
              <groupfilter function='member' level='[none:gender:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</rows>
        <cols>[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]</cols>
      </table>
      <simple-id uuid='{3AEAD605-86BC-4116-BD49-AEAA9AA4D898}' />
    </worksheet>
    <worksheet name='Records vs Birth Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</rows>
        <cols>[federated.1ch2zrq071foab1b9goew0r8trni].[none:birth year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Birth Year: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[none:birth year:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run bold='true'>A bunch of funny people...</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:birth year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:birth year:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1969</value>
                    <value>1647525</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{CAC505C5-DED3-4728-90F3-31BDFC42E9DC}' />
    </worksheet>
    <worksheet name='Top 10 Start Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='Attribute' name='[attr:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start station latitude:qk]' />
                <groupfilter function='level-members' level='[none:start station longitude:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station latitude:qk]' member='45.506264191001193' />
                <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.568905591964722' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (Start Station Latitude,Start Station Longitude)]</column>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]' field-type='quantitative' max='-8227944.2734148921' min='-8247396.4451872604' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]' field-type='quantitative' max='4978368.3847156027' min='4965870.0655410336' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
              <size column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
              <tooltip column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
              <tooltip column='[federated.1ch2zrq071foab1b9goew0r8trni].[attr:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</rows>
        <cols>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Stuyvesant High School? Unsure</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-8239121.2587414673'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4970765.9121613801'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-74.013285544415311' v='40.717527634392781' />
              </visual-coordinate>
            </point>
            <body x='-136' y='-33' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Union Square area</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-8236606.7827456202'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4973261.6356525663'>
                  <node-reference>
                    <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-73.990697622229092' v='40.734517959108487' />
              </visual-coordinate>
            </point>
            <body x='40' y='52' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Union Square area</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.737049839999997</value>
                    <value>-73.990092959999998</value>
                    <value>113840</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='116' y='45' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Grand Central Station</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.751873000000003</value>
                    <value>-73.977705999999998</value>
                    <value>151189</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Chelsea Piers</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.746744999999997</value>
                    <value>-74.007756000000001</value>
                    <value>91492</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-123' y='29' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Madison Square Garden</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.751550999999999</value>
                    <value>-73.993933999999996</value>
                    <value>91582</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-126' y='-35' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'>Madison Square Garden</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.750585347021499</value>
                    <value>-73.994684815406799</value>
                    <value>103642</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-124' y='-19' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Lincoln Center is nearby</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40.769155050000002</value>
                    <value>-73.981918410000006</value>
                    <value>93656</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{18642252-DCE6-42A6-90B0-933B45F50E4A}' />
    </worksheet>
    <worksheet name='Usage by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[diff:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ch2zrq071foab1b9goew0r8trni].[diff:sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk] + [federated.1ch2zrq071foab1b9goew0r8trni].[diff:sum:Number of Records:qk])</rows>
        <cols>([federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok] / [federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok])</cols>
      </table>
      <simple-id uuid='{A61258E1-43EA-4280-A317-B26453727E77}' />
    </worksheet>
    <worksheet name='Usage by start time (may,june,july,august,september)'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='5' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='9' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</rows>
        <cols>[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Hour of Starttime: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>8</value>
                    <value>718394</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Hour of Starttime: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Number of Records: </run>
              <run bold='true'>&lt;[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[hr:starttime:ok]</field>
                      <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>17</value>
                    <value>958167</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A2E73A16-6D64-4E06-B750-CE65B3F9D0CF}' />
    </worksheet>
    <worksheet name='Usage map vs quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='merge' name='federated.1ch2zrq071foab1b9goew0r8trni' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ch2zrq071foab1b9goew0r8trni'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (End Station Latitude,End Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:end station latitude:qk]' />
                <groupfilter function='level-members' level='[none:end station longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:end station latitude:qk]' member='45.506264191001193' />
                  <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.568905591964722' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:end station latitude:qk]' member='45.506364054011385' />
                  <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.569463491439805' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (End Station Latitude,End Station Longitude,QUARTER(Starttime),YEAR(Starttime))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:end station latitude:qk]' />
                <groupfilter function='level-members' level='[none:end station longitude:qk]' />
                <groupfilter function='level-members' level='[qr:starttime:ok]' />
                <groupfilter function='level-members' level='[yr:starttime:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:starttime:ok]' member='2018' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:starttime:ok]' member='3' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.838999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.841999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.844999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.923000000000002' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.917000000000002' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.847999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.920000000000002' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.917000000000002' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.850999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.853999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.856999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.859999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.863' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.866' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.869' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[qr:starttime:ok]' member='4' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.838999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.841999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.844999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.878' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.847999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.850999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.914000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.853999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.856999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.859999999999999' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.863' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.866' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:end station latitude:qk]' member='40.869' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                              <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[yr:starttime:ok]' member='2019' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[qr:starttime:ok]' member='1' />
                      <groupfilter function='union'>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.841999999999999' />
                          <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.844999999999999' />
                          <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.847999999999999' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.908000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.896000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.850999999999999' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.899000000000001' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.853999999999999' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.911000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.856999999999999' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.881' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.859999999999999' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.863' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.905000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.902000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.893000000000001' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.890000000000001' />
                          </groupfilter>
                        </groupfilter>
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:end station latitude:qk]' member='40.866' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.887' />
                            <groupfilter function='member' level='[none:end station longitude:qk]' member='-73.884' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:end station latitude:qk]' />
                  <hierarchy name='[none:end station longitude:qk]' />
                  <hierarchy name='[qr:starttime:ok]' />
                  <hierarchy name='[yr:starttime:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (End Station Latitude,End Station Longitude)]</column>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</column>
            <column>[federated.1ch2zrq071foab1b9goew0r8trni].[Exclusions (End Station Latitude,End Station Longitude,QUARTER(Starttime),YEAR(Starttime))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]' field-type='quantitative' max='-8229480.5566601409' min='-8240269.2826159494' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]' field-type='quantitative' max='4989724.3043478681' min='4960654.6819194099' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' num-steps='8' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
              <size column='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</rows>
        <cols>(([federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok] / [federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]) * [federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk])</cols>
      </table>
      <simple-id uuid='{0C6A24B5-60FB-45E3-A7E3-C774F112E270}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3D60D5C4-F56C-4009-AC17-D606CFDDBEC1}' />
    </window>
    <window class='worksheet' name='Usage map vs quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.856999999999999</value>
                <value>-73.881</value>
                <value>1</value>
                <value>4</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.841999999999999</value>
                <value>-73.881</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.866</value>
                <value>-73.884</value>
                <value>1</value>
                <value>2</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.859999999999999</value>
                <value>-73.884</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.856999999999999</value>
                <value>-73.884</value>
                <value>1</value>
                <value>2</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.866</value>
                <value>-73.887</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.856999999999999</value>
                <value>-73.887</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.863</value>
                <value>-73.890000000000001</value>
                <value>1</value>
                <value>4</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.859999999999999</value>
                <value>-73.890000000000001</value>
                <value>1</value>
                <value>2</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.856999999999999</value>
                <value>-73.890000000000001</value>
                <value>1</value>
                <value>3</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.853999999999999</value>
                <value>-73.890000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.863</value>
                <value>-73.893000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.856999999999999</value>
                <value>-73.893000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.847999999999999</value>
                <value>-73.893000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.844999999999999</value>
                <value>-73.893000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.847999999999999</value>
                <value>-73.896000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.850999999999999</value>
                <value>-73.899000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.863</value>
                <value>-73.902000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.853999999999999</value>
                <value>-73.902000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.850999999999999</value>
                <value>-73.902000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.863</value>
                <value>-73.905000000000001</value>
                <value>1</value>
                <value>2</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.850999999999999</value>
                <value>-73.905000000000001</value>
                <value>1</value>
                <value>2</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.847999999999999</value>
                <value>-73.908000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station latitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:end station longitude:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[qr:starttime:ok]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[sum:Number of Records:qk]</field>
                  <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40.853999999999999</value>
                <value>-73.911000000000001</value>
                <value>1</value>
                <value>1</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{18E1498F-2D19-4B42-9784-E7C89DC916F7}' />
    </window>
    <window class='worksheet' name='Usage by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ch2zrq071foab1b9goew0r8trni].[diff:sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2828C2CB-37BD-4704-84BF-27575F204D39}' />
    </window>
    <window class='worksheet' name='%Split of Usertype by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]' type='color' />
            <card pane-specification-id='1' param='[federated.1ch2zrq071foab1b9goew0r8trni].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:gender:ok]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:usertype:nk]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{981E98A9-5AB3-4818-A18C-966DCF628E1F}' />
    </window>
    <window class='worksheet' name='Records vs Birth Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F0EDF4C1-E68D-46B7-9948-A355916C0845}' />
    </window>
    <window class='worksheet' name='Usage by start time (may,june,july,august,september)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[mn:starttime:ok]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F41082B1-2FAD-430F-A3F9-23AE3396A95C}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 10 Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station latitude:qk]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station longitude:qk]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[none:start station name:nk]</field>
            <field>[federated.1ch2zrq071foab1b9goew0r8trni].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAB50493-7285-44A3-B70D-3D0436294C89}' />
    </window>
    <window class='worksheet' name='Direct distance between start and end stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CF308542-5488-4866-8B0C-4D258579EFB0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%Split of Usertype by Month' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Direct distance between start and end stations' width='192'>
      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
      MvxvQjClAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender' width='192'>
      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
      ATuZcoK3GzPrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Records vs Birth Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Start Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Usage by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Usage by start time (may,june,july,august,september)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Usage map vs quarter' width='192'>
      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
      yEkFPri5g/8H81vyTPRR8hkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
